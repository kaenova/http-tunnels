name: Build and Release Go Binary

on:
  push:
    branches:
      - main
    paths:
      - 'client/main.go'
  workflow_dispatch:

jobs:
  build:
    name: Build and Upload Artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      # Build the binary
      - name: Build binary
        run: |
          mkdir -p dist
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o dist/main-${{ matrix.os }}-${{ matrix.arch }} ./client/main.go

      # Upload the binary as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/main-${{ matrix.os }}-${{ matrix.arch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Download all artifacts
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      # Create a GitHub release and upload binaries
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            dist/main-windows-amd64
            dist/main-darwin-amd64
            dist/main-darwin-arm64
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated release of Go binaries for:
            - Windows 64-bit
            - macOS (Darwin) ARM
            - macOS (Darwin) Intel